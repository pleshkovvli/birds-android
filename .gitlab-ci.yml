# This file is a template, and might need editing before it works on your project.
# Read more about this script on this blog post https://about.gitlab.com/2018/10/24/setting-up-gitlab-ci-for-android-projects/, by Jason Lenny
# If you are interested in using Android with FastLane for publishing take a look at the Android-Fastlane template.

image: jangrewe/gitlab-ci-android

variables:
  ANDROID_COMPILE_SDK: "27"
  APP_NAME: "NameOfYourApp"

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .m2/
    - .gradle/

stages:
  - build
  - test
  - package

before_script:
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew
  - apt-get update -y && apt-get install wget -y


stages:
  - build  
  - test
  - quality_assurance

assembleDebug:
  stage: build
  script:
    - ./gradlew clean assembleDebug
  artifacts:
    paths:
      - app/build/outputs/

unit_tests:
  stage: test
  script:
    - ./gradlew test
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    when: on_failure
    expire_in: 4 days
    paths:
      - app/build/reports/tests/

instrumentation_tests:
  stage: test
  script:
    - wget --quiet --output-document=android-wait-for-emulator https://raw.githubusercontent.com/travis-ci/travis-cookbooks/0f497eb71291b52a703143c5cd63a217c8766dc9/community-cookbooks/android-sdk/files/default/android-wait-for-emulator
    - chmod +x android-wait-for-emulator
    - echo y | ${ANDROID_HOME}/tools/bin/sdkmanager "system-images;android-${ANDROID_COMPILE_SDK};google_apis_playstore;x86"
    - echo y | ${ANDROID_HOME}/tools/bin/sdkmanager --update
    - echo no | ${ANDROID_HOME}/tools/bin/avdmanager create avd -k "system-images;android-${ANDROID_COMPILE_SDK};google_apis_playstore;x86" -n test
    - ${ANDROID_HOME}/tools/emulator -avd test -no-window -no-audio 
    - ./android-wait-for-emulator
    - adb shell input keyevent 82
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    when: on_failure
    expire_in: 4 days
    paths:
      - app/build/reports/androidTests/connected/
      
      
static_analysis:
  stage: quality_assurance
  script:
    - ./gradlew createDebugCoverageReport jacocoTestReport sonarqube -Dsonar.login=$SONAR_LOGIN
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    when: on_failure
    expire_in: 4 days
    paths:
      - app/build/reports/
